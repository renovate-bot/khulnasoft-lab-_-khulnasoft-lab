name: Generic Secrets / Passwords

patterns:
  - name: Generic Passwords
    type: generic_passwords
    regex:
      version: 0.4
      pattern: |
        [a-zA-Z0-9!.,$%&*+?^_`{|}()[\]\\/~-][a-zA-Z0-9\t !.,$%&*+?^_`{|}()[\]\\/~-]*
      start: |
        (?:\A|[^a-zA-Z0-9])(?i)(?:api|jwt|mysql|db)?[_.-]?(?:pass?(?:wo?r?d|code|phrase)|secret)([ \t]+As[ \t]+String)?[\t ]*(={1,3}|:)[\t ]*(?:["']|b["'])?
      end: |
        (\z|[\r\n'"])
      additional_not_match:
        # something that means "password" or a placeholder name - either a variable or a placeholder
        # a literal value or config switch
        - ^(?i)(?:[a-z0-9_.]*,\s*)?(?:str\()?[[<(]?(?:(?:(?:user|key)_?)?(?:[a-zA-Z0-9._]+[_.])?(?:the )?(?:pass?(wo?r?d|code|phrase)|pass|pwd|secret|token|tok|redacted|placeholder|dummy|pw|thephrase)|write|read|on|off|true|false|none|null|nil|undefined|eof|ignore|eol|git|yes|no|y|n),?[\]>)]?(?:\)\s*\{)?\\?( or )?$
        # Python type hints, Swift typing
        - ^\s*(?:(?:typing\.)?(?:(?:[Tt]uple|[Ll]ist|[Dd]ict|Callable|Iterable|Sequence|Optional|Union)\[.*|(?:int|str|float|(?:typing.)?Any|None|bytes|bool|ReadableBuffer)\s*(?:[,|].*)?|(?:Int|Swift\.Int|Int32)\.*))\s*$
        # ..., \, , \n, \0, ',' and other single chars, smilies, hex, digits, nothing at all,
        # directories, regex, format string placeholder, urllib demo passphrase, "optional" in docs, a variable substitution, or surrounded by brackets of various kinds
        # all with possible ',' and surrounding whitespace, possibly with a following comment
        - ^\s*(?:\.\.\.|\\|\\n|\\0|[,()[\]{}`.]\\?|-[)(]|0x[A-Fa-f0-9]+|[0-9]{1,4}|(?:~|/tmp|\.\.|\.)|\\{1,2}w\+/g,( \\?)?|%[sr]|geheim\$parole|\([Oo]ptional\).*|\$?(?:\{\{?[^}]+\}\}?|\(\(?[^)]+\)\)?|\[\[?[^\]+]\]\]?))?,?\s*(?:\s*(?:/\*|#|//).*)?$
        # function definitions, e.g. Javascript, function calls or variable declaration
        - ^(?:function\s*\([^)]*\)\s*{\s*.*|\([^)]*\)\s*=>\s*(?:{\s*|[^;)]+[;)])|(?:new )?[a-zA-Z0-9_.]+\(.*|(?:public|private) [A-Za-z0-9_]+ \{)$
        # reference to a member variable, index into a variable, bash variables, perl hash key index, environment vars
        - ^\s*(?:(?:self|this)\.[a-zA-Z_][a-zA-Z0-9_.]+[,[]?|[a-zA-Z0-9_.]+\[(?:[a-zA-Z0-9_.]+)?\]?|\$(?:[1-9]|[A-Za-z0-9_]+)\{?|os\.environ\[[^\]]\]|process\.env\.[A-Z0-9_]+)\s*(?:,|\|\||&&)?\s*$

    expected:
      - name: passwords.js
        start_offset: 14
        end_offset: 25
      - name: passwords.js
        start_offset: 41
        end_offset: 62
      - name: passwords.js
        start_offset: 97
        end_offset: 112

    comments:
      - "`password`, `secret`, `key`, or password like prefix (fuzzy)"
      - "Delimiters like `=` or `:` (with padding)"
      - "String with a number of chars until a breaking char"
      - "Not matching variables, placeholders or common configuration constants such as 'read' and 'write'"

  - name: UUIDs
    type: uuids
    regex:
      version: 0.1
      pattern: |
        (?i)[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
      start: |
        \A|[^0-9A-Fa-f-]
      end: |
        \z|[^0-9A-Fa-f-]
      additional_not_match:
        - ^12345678-1234-5678-1234-567812345678$
        - ^00000000-0000-0000-0000-000000000000$
        - ^(?i)00010203-0405-0607-0809-0a0b0c0d0e0f$
        - ^(?i)12345678-1234-1234-1234-123456789abc$
    expected:
      - name: uuids.txt
        start_offset: 12
        end_offset: 48
      - name: uuids.txt
        start_offset: 49
        end_offset: 85
      - name: uuids.txt
        start_offset: 131
        end_offset: 167

  - name: Bearer Tokens
    type: bearer_tokens
    regex:
      version: 0.1
      pattern: |
        [a-zA-Z0-9_.=/+:-]+
      start: |
        ['"\s][Aa]uthorization: Bearer[ ]+
      end: |
        \z|[\s'"]
      additional_not_match:
        - ^(?:letmein|Oracle|SuperSecretString|foo|ababbdbbebbbebdbbe5538003023|XYZ_INVALID_ACCESTOKEN_XYZ|QQ==|Shizuku|mF_9.B5f-4.1JqM|h480djs93hd8|SlAV32hkKG)$
        - ^(?i)(?:dummy|fake|bearer|auth|invalid|your|my|the|undefined|github|oidc|database)(?:_api)?(?:_?token|key|secret)?$
        - ^(?i)(?:[a-z0-9]|XYZ|ABC|123|.*_token)$
        - (?i)x{5}
        - ^(?i)(x+|y+|z+|a+|\.+|.*\.\.\.)$
    expected:
      - name: bearer.txt
        start_offset: 45
        end_offset: 64
      - name: bearer.txt
        start_offset: 99
        end_offset: 118
    comments:
      - "As used in an Authorization header"
      - "We try to remove common placeholders"
